1. 모든 경우에서 덱을 쓰지 않고 스택과 큐도 사용하는 이유

덱이 스택과 큐에 비해 데이터에 더 자유롭게 접근할 수 있지만 덱의 모든 연산이 필요하지 않은 경우에는 보다 더 간단하고 필요한 연산만 가능한 스택과 큐를 사용한다.
후위연산 과정은 후위선출 방식의 선형 자료구조인 스택만으로도 충분히 구현할 수 있기에 스택을 사용한다.
큐는 선입선출 방식의 자료구조로, 선형 큐는 데이터를 삭제하고 빈 인덱스를 다시 사용할 수 없다는 단점이 있지만 원형큐는 최대 인덱스까지 데이터를 저장하면 다시 첫번째 인덱스로 돌아가며 지속적으로 데이터를 삽입/삭제 할 수 있다는 장점을 가진다. 덱은 원형큐에서 더 나아가 front에서도 데이터 추가가 가능하고 rear에서 데이터 삭제 연산도 가능하게 된 선형 자료구조이기에 더 복잡한 연산이 필요할 때 사용한다.



2. 큐에 항목들을 삽입하고 삭제하는 연산의 시간 복잡도

큐 항목의 삽입과 삭제는 각각 한쪽에서만 이뤄지므로 항목을 삽입할 때의 시간복잡도가 O(n), 항목을 삭제할 때의 시간복잡도도 똑같이 O(n)이다.
